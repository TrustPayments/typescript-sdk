import { AbstractAccountUpdate as AbstractAccountUpdateModelImport } from "./src/models/AbstractAccountUpdate";
import { AbstractApplicationUserUpdate as AbstractApplicationUserUpdateModelImport } from "./src/models/AbstractApplicationUserUpdate";
import { AbstractCustomerActive as AbstractCustomerActiveModelImport } from "./src/models/AbstractCustomerActive";
import { AbstractCustomerAddressActive as AbstractCustomerAddressActiveModelImport } from "./src/models/AbstractCustomerAddressActive";
import { AbstractCustomerCommentActive as AbstractCustomerCommentActiveModelImport } from "./src/models/AbstractCustomerCommentActive";
import { AbstractHumanUserUpdate as AbstractHumanUserUpdateModelImport } from "./src/models/AbstractHumanUserUpdate";
import { AbstractPaymentLinkUpdate as AbstractPaymentLinkUpdateModelImport } from "./src/models/AbstractPaymentLinkUpdate";
import { AbstractRefundCommentActive as AbstractRefundCommentActiveModelImport } from "./src/models/AbstractRefundCommentActive";
import { AbstractSpaceUpdate as AbstractSpaceUpdateModelImport } from "./src/models/AbstractSpaceUpdate";
import { AbstractTokenUpdate as AbstractTokenUpdateModelImport } from "./src/models/AbstractTokenUpdate";
import { AbstractTransactionCommentActive as AbstractTransactionCommentActiveModelImport } from "./src/models/AbstractTransactionCommentActive";
import { AbstractTransactionInvoiceCommentActive as AbstractTransactionInvoiceCommentActiveModelImport } from "./src/models/AbstractTransactionInvoiceCommentActive";
import { AbstractTransactionPending as AbstractTransactionPendingModelImport } from "./src/models/AbstractTransactionPending";
import { AbstractWebhookListenerUpdate as AbstractWebhookListenerUpdateModelImport } from "./src/models/AbstractWebhookListenerUpdate";
import { AbstractWebhookUrlUpdate as AbstractWebhookUrlUpdateModelImport } from "./src/models/AbstractWebhookUrlUpdate";
import { Account as AccountModelImport } from "./src/models/Account";
import { AccountState as AccountStateModelImport } from "./src/models/AccountState";
import { AccountType as AccountTypeModelImport } from "./src/models/AccountType";
import { Address as AddressModelImport } from "./src/models/Address";
import { AddressCreate as AddressCreateModelImport } from "./src/models/AddressCreate";
import { ChargeAttemptEnvironment as ChargeAttemptEnvironmentModelImport } from "./src/models/ChargeAttemptEnvironment";
import { ChargeAttemptState as ChargeAttemptStateModelImport } from "./src/models/ChargeAttemptState";
import { ChargeFlow as ChargeFlowModelImport } from "./src/models/ChargeFlow";
import { ChargeFlowLevelConfiguration as ChargeFlowLevelConfigurationModelImport } from "./src/models/ChargeFlowLevelConfiguration";
import { ChargeFlowLevelConfigurationType as ChargeFlowLevelConfigurationTypeModelImport } from "./src/models/ChargeFlowLevelConfigurationType";
import { ChargeFlowLevelState as ChargeFlowLevelStateModelImport } from "./src/models/ChargeFlowLevelState";
import { ChargeState as ChargeStateModelImport } from "./src/models/ChargeState";
import { ChargeType as ChargeTypeModelImport } from "./src/models/ChargeType";
import { ClientError as ClientErrorModelImport } from "./src/models/ClientError";
import { ClientErrorType as ClientErrorTypeModelImport } from "./src/models/ClientErrorType";
import { CompletionLineItem as CompletionLineItemModelImport } from "./src/models/CompletionLineItem";
import { CompletionLineItemCreate as CompletionLineItemCreateModelImport } from "./src/models/CompletionLineItemCreate";
import { Condition as ConditionModelImport } from "./src/models/Condition";
import { ConditionType as ConditionTypeModelImport } from "./src/models/ConditionType";
import { ConnectorInvocationStage as ConnectorInvocationStageModelImport } from "./src/models/ConnectorInvocationStage";
import { CreationEntityState as CreationEntityStateModelImport } from "./src/models/CreationEntityState";
import { CriteriaOperator as CriteriaOperatorModelImport } from "./src/models/CriteriaOperator";
import { Customer as CustomerModelImport } from "./src/models/Customer";
import { CustomerAddress as CustomerAddressModelImport } from "./src/models/CustomerAddress";
import { CustomerAddressType as CustomerAddressTypeModelImport } from "./src/models/CustomerAddressType";
import { CustomerComment as CustomerCommentModelImport } from "./src/models/CustomerComment";
import { CustomerPostalAddress as CustomerPostalAddressModelImport } from "./src/models/CustomerPostalAddress";
import { CustomerPostalAddressCreate as CustomerPostalAddressCreateModelImport } from "./src/models/CustomerPostalAddressCreate";
import { CustomersPresence as CustomersPresenceModelImport } from "./src/models/CustomersPresence";
import { DataCollectionType as DataCollectionTypeModelImport } from "./src/models/DataCollectionType";
import { DatabaseTranslatedString as DatabaseTranslatedStringModelImport } from "./src/models/DatabaseTranslatedString";
import { DatabaseTranslatedStringItem as DatabaseTranslatedStringItemModelImport } from "./src/models/DatabaseTranslatedStringItem";
import { DeliveryIndicationDecisionReason as DeliveryIndicationDecisionReasonModelImport } from "./src/models/DeliveryIndicationDecisionReason";
import { DeliveryIndicationState as DeliveryIndicationStateModelImport } from "./src/models/DeliveryIndicationState";
import { DocumentTemplate as DocumentTemplateModelImport } from "./src/models/DocumentTemplate";
import { DocumentTemplateType as DocumentTemplateTypeModelImport } from "./src/models/DocumentTemplateType";
import { DocumentTemplateTypeGroup as DocumentTemplateTypeGroupModelImport } from "./src/models/DocumentTemplateTypeGroup";
import { EntityExportRequest as EntityExportRequestModelImport } from "./src/models/EntityExportRequest";
import { EntityQuery as EntityQueryModelImport } from "./src/models/EntityQuery";
import { EntityQueryFilter as EntityQueryFilterModelImport } from "./src/models/EntityQueryFilter";
import { EntityQueryFilterType as EntityQueryFilterTypeModelImport } from "./src/models/EntityQueryFilterType";
import { EntityQueryOrderBy as EntityQueryOrderByModelImport } from "./src/models/EntityQueryOrderBy";
import { EntityQueryOrderByType as EntityQueryOrderByTypeModelImport } from "./src/models/EntityQueryOrderByType";
import { Environment as EnvironmentModelImport } from "./src/models/Environment";
import { FailureCategory as FailureCategoryModelImport } from "./src/models/FailureCategory";
import { FailureReason as FailureReasonModelImport } from "./src/models/FailureReason";
import { Feature as FeatureModelImport } from "./src/models/Feature";
import { FeatureCategory as FeatureCategoryModelImport } from "./src/models/FeatureCategory";
import { Gender as GenderModelImport } from "./src/models/Gender";
import { HumanUser as HumanUserModelImport } from "./src/models/HumanUser";
import { Label as LabelModelImport } from "./src/models/Label";
import { LabelDescriptor as LabelDescriptorModelImport } from "./src/models/LabelDescriptor";
import { LabelDescriptorCategory as LabelDescriptorCategoryModelImport } from "./src/models/LabelDescriptorCategory";
import { LabelDescriptorGroup as LabelDescriptorGroupModelImport } from "./src/models/LabelDescriptorGroup";
import { LabelDescriptorType as LabelDescriptorTypeModelImport } from "./src/models/LabelDescriptorType";
import { LegalOrganizationForm as LegalOrganizationFormModelImport } from "./src/models/LegalOrganizationForm";
import { LineItem as LineItemModelImport } from "./src/models/LineItem";
import { LineItemAttribute as LineItemAttributeModelImport } from "./src/models/LineItemAttribute";
import { LineItemAttributeCreate as LineItemAttributeCreateModelImport } from "./src/models/LineItemAttributeCreate";
import { LineItemCreate as LineItemCreateModelImport } from "./src/models/LineItemCreate";
import { LineItemReduction as LineItemReductionModelImport } from "./src/models/LineItemReduction";
import { LineItemReductionCreate as LineItemReductionCreateModelImport } from "./src/models/LineItemReductionCreate";
import { LineItemType as LineItemTypeModelImport } from "./src/models/LineItemType";
import { LocalizedString as LocalizedStringModelImport } from "./src/models/LocalizedString";
import { ManualTask as ManualTaskModelImport } from "./src/models/ManualTask";
import { ManualTaskAction as ManualTaskActionModelImport } from "./src/models/ManualTaskAction";
import { ManualTaskActionStyle as ManualTaskActionStyleModelImport } from "./src/models/ManualTaskActionStyle";
import { ManualTaskState as ManualTaskStateModelImport } from "./src/models/ManualTaskState";
import { ManualTaskType as ManualTaskTypeModelImport } from "./src/models/ManualTaskType";
import { OneClickPaymentMode as OneClickPaymentModeModelImport } from "./src/models/OneClickPaymentMode";
import { PaymentConnector as PaymentConnectorModelImport } from "./src/models/PaymentConnector";
import { PaymentConnectorConfiguration as PaymentConnectorConfigurationModelImport } from "./src/models/PaymentConnectorConfiguration";
import { PaymentConnectorFeature as PaymentConnectorFeatureModelImport } from "./src/models/PaymentConnectorFeature";
import { PaymentContract as PaymentContractModelImport } from "./src/models/PaymentContract";
import { PaymentContractState as PaymentContractStateModelImport } from "./src/models/PaymentContractState";
import { PaymentContractType as PaymentContractTypeModelImport } from "./src/models/PaymentContractType";
import { PaymentInformationHash as PaymentInformationHashModelImport } from "./src/models/PaymentInformationHash";
import { PaymentInformationHashType as PaymentInformationHashTypeModelImport } from "./src/models/PaymentInformationHashType";
import { PaymentLink as PaymentLinkModelImport } from "./src/models/PaymentLink";
import { PaymentLinkProtectionMode as PaymentLinkProtectionModeModelImport } from "./src/models/PaymentLinkProtectionMode";
import { PaymentLinkUpdate as PaymentLinkUpdateModelImport } from "./src/models/PaymentLinkUpdate";
import { PaymentMethod as PaymentMethodModelImport } from "./src/models/PaymentMethod";
import { PaymentMethodBrand as PaymentMethodBrandModelImport } from "./src/models/PaymentMethodBrand";
import { PaymentMethodConfiguration as PaymentMethodConfigurationModelImport } from "./src/models/PaymentMethodConfiguration";
import { PaymentPrimaryRiskTaker as PaymentPrimaryRiskTakerModelImport } from "./src/models/PaymentPrimaryRiskTaker";
import { PaymentProcessor as PaymentProcessorModelImport } from "./src/models/PaymentProcessor";
import { PaymentProcessorConfiguration as PaymentProcessorConfigurationModelImport } from "./src/models/PaymentProcessorConfiguration";
import { PaymentTerminal as PaymentTerminalModelImport } from "./src/models/PaymentTerminal";
import { PaymentTerminalAddress as PaymentTerminalAddressModelImport } from "./src/models/PaymentTerminalAddress";
import { PaymentTerminalConfiguration as PaymentTerminalConfigurationModelImport } from "./src/models/PaymentTerminalConfiguration";
import { PaymentTerminalConfigurationState as PaymentTerminalConfigurationStateModelImport } from "./src/models/PaymentTerminalConfigurationState";
import { PaymentTerminalConfigurationVersion as PaymentTerminalConfigurationVersionModelImport } from "./src/models/PaymentTerminalConfigurationVersion";
import { PaymentTerminalConfigurationVersionState as PaymentTerminalConfigurationVersionStateModelImport } from "./src/models/PaymentTerminalConfigurationVersionState";
import { PaymentTerminalLocation as PaymentTerminalLocationModelImport } from "./src/models/PaymentTerminalLocation";
import { PaymentTerminalLocationState as PaymentTerminalLocationStateModelImport } from "./src/models/PaymentTerminalLocationState";
import { PaymentTerminalLocationVersion as PaymentTerminalLocationVersionModelImport } from "./src/models/PaymentTerminalLocationVersion";
import { PaymentTerminalLocationVersionState as PaymentTerminalLocationVersionStateModelImport } from "./src/models/PaymentTerminalLocationVersionState";
import { PaymentTerminalState as PaymentTerminalStateModelImport } from "./src/models/PaymentTerminalState";
import { PaymentTerminalType as PaymentTerminalTypeModelImport } from "./src/models/PaymentTerminalType";
import { Permission as PermissionModelImport } from "./src/models/Permission";
import { Refund as RefundModelImport } from "./src/models/Refund";
import { RefundComment as RefundCommentModelImport } from "./src/models/RefundComment";
import { RefundCreate as RefundCreateModelImport } from "./src/models/RefundCreate";
import { RefundState as RefundStateModelImport } from "./src/models/RefundState";
import { RefundType as RefundTypeModelImport } from "./src/models/RefundType";
import { RenderedDocument as RenderedDocumentModelImport } from "./src/models/RenderedDocument";
import { RenderedTerminalReceipt as RenderedTerminalReceiptModelImport } from "./src/models/RenderedTerminalReceipt";
import { ResourcePath as ResourcePathModelImport } from "./src/models/ResourcePath";
import { ResourceState as ResourceStateModelImport } from "./src/models/ResourceState";
import { RestAddressFormat as RestAddressFormatModelImport } from "./src/models/RestAddressFormat";
import { RestAddressFormatField as RestAddressFormatFieldModelImport } from "./src/models/RestAddressFormatField";
import { RestCountry as RestCountryModelImport } from "./src/models/RestCountry";
import { RestCountryState as RestCountryStateModelImport } from "./src/models/RestCountryState";
import { RestCurrency as RestCurrencyModelImport } from "./src/models/RestCurrency";
import { RestLanguage as RestLanguageModelImport } from "./src/models/RestLanguage";
import { Role as RoleModelImport } from "./src/models/Role";
import { SalesChannel as SalesChannelModelImport } from "./src/models/SalesChannel";
import { Scope as ScopeModelImport } from "./src/models/Scope";
import { ServerError as ServerErrorModelImport } from "./src/models/ServerError";
import { ShopifyAdditionalLineItemData as ShopifyAdditionalLineItemDataModelImport } from "./src/models/ShopifyAdditionalLineItemData";
import { ShopifyIntegration as ShopifyIntegrationModelImport } from "./src/models/ShopifyIntegration";
import { ShopifyIntegrationPaymentAppVersion as ShopifyIntegrationPaymentAppVersionModelImport } from "./src/models/ShopifyIntegrationPaymentAppVersion";
import { ShopifyIntegrationSubscriptionAppVersion as ShopifyIntegrationSubscriptionAppVersionModelImport } from "./src/models/ShopifyIntegrationSubscriptionAppVersion";
import { ShopifyTransactionState as ShopifyTransactionStateModelImport } from "./src/models/ShopifyTransactionState";
import { Space as SpaceModelImport } from "./src/models/Space";
import { SpaceAddress as SpaceAddressModelImport } from "./src/models/SpaceAddress";
import { SpaceAddressCreate as SpaceAddressCreateModelImport } from "./src/models/SpaceAddressCreate";
import { SpaceView as SpaceViewModelImport } from "./src/models/SpaceView";
import { StaticValue as StaticValueModelImport } from "./src/models/StaticValue";
import { Tax as TaxModelImport } from "./src/models/Tax";
import { TaxCreate as TaxCreateModelImport } from "./src/models/TaxCreate";
import { TenantDatabase as TenantDatabaseModelImport } from "./src/models/TenantDatabase";
import { Token as TokenModelImport } from "./src/models/Token";
import { TokenVersion as TokenVersionModelImport } from "./src/models/TokenVersion";
import { TokenVersionState as TokenVersionStateModelImport } from "./src/models/TokenVersionState";
import { TokenVersionType as TokenVersionTypeModelImport } from "./src/models/TokenVersionType";
import { TokenizationMode as TokenizationModeModelImport } from "./src/models/TokenizationMode";
import { Transaction as TransactionModelImport } from "./src/models/Transaction";
import { TransactionAwareEntity as TransactionAwareEntityModelImport } from "./src/models/TransactionAwareEntity";
import { TransactionComment as TransactionCommentModelImport } from "./src/models/TransactionComment";
import { TransactionCompletionBehavior as TransactionCompletionBehaviorModelImport } from "./src/models/TransactionCompletionBehavior";
import { TransactionCompletionMode as TransactionCompletionModeModelImport } from "./src/models/TransactionCompletionMode";
import { TransactionCompletionRequest as TransactionCompletionRequestModelImport } from "./src/models/TransactionCompletionRequest";
import { TransactionCompletionState as TransactionCompletionStateModelImport } from "./src/models/TransactionCompletionState";
import { TransactionEnvironmentSelectionStrategy as TransactionEnvironmentSelectionStrategyModelImport } from "./src/models/TransactionEnvironmentSelectionStrategy";
import { TransactionGroup as TransactionGroupModelImport } from "./src/models/TransactionGroup";
import { TransactionGroupState as TransactionGroupStateModelImport } from "./src/models/TransactionGroupState";
import { TransactionInvoiceComment as TransactionInvoiceCommentModelImport } from "./src/models/TransactionInvoiceComment";
import { TransactionInvoiceReplacement as TransactionInvoiceReplacementModelImport } from "./src/models/TransactionInvoiceReplacement";
import { TransactionInvoiceState as TransactionInvoiceStateModelImport } from "./src/models/TransactionInvoiceState";
import { TransactionLineItemUpdateRequest as TransactionLineItemUpdateRequestModelImport } from "./src/models/TransactionLineItemUpdateRequest";
import { TransactionState as TransactionStateModelImport } from "./src/models/TransactionState";
import { TransactionUserInterfaceType as TransactionUserInterfaceTypeModelImport } from "./src/models/TransactionUserInterfaceType";
import { TransactionVoidMode as TransactionVoidModeModelImport } from "./src/models/TransactionVoidMode";
import { TransactionVoidState as TransactionVoidStateModelImport } from "./src/models/TransactionVoidState";
import { TwoFactorAuthenticationType as TwoFactorAuthenticationTypeModelImport } from "./src/models/TwoFactorAuthenticationType";
import { UnencryptedCardData as UnencryptedCardDataModelImport } from "./src/models/UnencryptedCardData";
import { UnencryptedCardDataCreate as UnencryptedCardDataCreateModelImport } from "./src/models/UnencryptedCardDataCreate";
import { User as UserModelImport } from "./src/models/User";
import { UserAccountRole as UserAccountRoleModelImport } from "./src/models/UserAccountRole";
import { UserSpaceRole as UserSpaceRoleModelImport } from "./src/models/UserSpaceRole";
import { UserType as UserTypeModelImport } from "./src/models/UserType";
import { WebhookIdentity as WebhookIdentityModelImport } from "./src/models/WebhookIdentity";
import { WebhookListener as WebhookListenerModelImport } from "./src/models/WebhookListener";
import { WebhookListenerEntity as WebhookListenerEntityModelImport } from "./src/models/WebhookListenerEntity";
import { WebhookUrl as WebhookUrlModelImport } from "./src/models/WebhookUrl";
import { AccountCreate as AccountCreateModelImport } from "./src/models/AccountCreate";
import { AccountUpdate as AccountUpdateModelImport } from "./src/models/AccountUpdate";
import { ApplicationUser as ApplicationUserModelImport } from "./src/models/ApplicationUser";
import { ApplicationUserCreate as ApplicationUserCreateModelImport } from "./src/models/ApplicationUserCreate";
import { ApplicationUserUpdate as ApplicationUserUpdateModelImport } from "./src/models/ApplicationUserUpdate";
import { Charge as ChargeModelImport } from "./src/models/Charge";
import { ChargeAttempt as ChargeAttemptModelImport } from "./src/models/ChargeAttempt";
import { ChargeFlowLevel as ChargeFlowLevelModelImport } from "./src/models/ChargeFlowLevel";
import { ChargeFlowLevelPaymentLink as ChargeFlowLevelPaymentLinkModelImport } from "./src/models/ChargeFlowLevelPaymentLink";
import { ConnectorInvocation as ConnectorInvocationModelImport } from "./src/models/ConnectorInvocation";
import { CustomerActive as CustomerActiveModelImport } from "./src/models/CustomerActive";
import { CustomerAddressActive as CustomerAddressActiveModelImport } from "./src/models/CustomerAddressActive";
import { CustomerAddressCreate as CustomerAddressCreateModelImport } from "./src/models/CustomerAddressCreate";
import { CustomerCommentActive as CustomerCommentActiveModelImport } from "./src/models/CustomerCommentActive";
import { CustomerCommentCreate as CustomerCommentCreateModelImport } from "./src/models/CustomerCommentCreate";
import { CustomerCreate as CustomerCreateModelImport } from "./src/models/CustomerCreate";
import { DeliveryIndication as DeliveryIndicationModelImport } from "./src/models/DeliveryIndication";
import { HumanUserCreate as HumanUserCreateModelImport } from "./src/models/HumanUserCreate";
import { HumanUserUpdate as HumanUserUpdateModelImport } from "./src/models/HumanUserUpdate";
import { PaymentLinkActive as PaymentLinkActiveModelImport } from "./src/models/PaymentLinkActive";
import { PaymentLinkCreate as PaymentLinkCreateModelImport } from "./src/models/PaymentLinkCreate";
import { PaymentTerminalContactAddress as PaymentTerminalContactAddressModelImport } from "./src/models/PaymentTerminalContactAddress";
import { RefundCommentActive as RefundCommentActiveModelImport } from "./src/models/RefundCommentActive";
import { RefundCommentCreate as RefundCommentCreateModelImport } from "./src/models/RefundCommentCreate";
import { ShopifyTransaction as ShopifyTransactionModelImport } from "./src/models/ShopifyTransaction";
import { SpaceCreate as SpaceCreateModelImport } from "./src/models/SpaceCreate";
import { SpaceUpdate as SpaceUpdateModelImport } from "./src/models/SpaceUpdate";
import { TokenCreate as TokenCreateModelImport } from "./src/models/TokenCreate";
import { TokenUpdate as TokenUpdateModelImport } from "./src/models/TokenUpdate";
import { TransactionCommentActive as TransactionCommentActiveModelImport } from "./src/models/TransactionCommentActive";
import { TransactionCommentCreate as TransactionCommentCreateModelImport } from "./src/models/TransactionCommentCreate";
import { TransactionCompletion as TransactionCompletionModelImport } from "./src/models/TransactionCompletion";
import { TransactionCreate as TransactionCreateModelImport } from "./src/models/TransactionCreate";
import { TransactionInvoice as TransactionInvoiceModelImport } from "./src/models/TransactionInvoice";
import { TransactionInvoiceCommentActive as TransactionInvoiceCommentActiveModelImport } from "./src/models/TransactionInvoiceCommentActive";
import { TransactionInvoiceCommentCreate as TransactionInvoiceCommentCreateModelImport } from "./src/models/TransactionInvoiceCommentCreate";
import { TransactionLineItemVersion as TransactionLineItemVersionModelImport } from "./src/models/TransactionLineItemVersion";
import { TransactionPending as TransactionPendingModelImport } from "./src/models/TransactionPending";
import { TransactionVoid as TransactionVoidModelImport } from "./src/models/TransactionVoid";
import { WebhookListenerCreate as WebhookListenerCreateModelImport } from "./src/models/WebhookListenerCreate";
import { WebhookListenerUpdate as WebhookListenerUpdateModelImport } from "./src/models/WebhookListenerUpdate";
import { WebhookUrlCreate as WebhookUrlCreateModelImport } from "./src/models/WebhookUrlCreate";
import { WebhookUrlUpdate as WebhookUrlUpdateModelImport } from "./src/models/WebhookUrlUpdate";
import { ApplicationUserCreateWithMacKey as ApplicationUserCreateWithMacKeyModelImport } from "./src/models/ApplicationUserCreateWithMacKey";

import { AccountService as AccountServiceApiImport } from "./src/api/AccountService";
import { ApplicationUserService as ApplicationUserServiceApiImport } from "./src/api/ApplicationUserService";
import { CardProcessingService as CardProcessingServiceApiImport } from "./src/api/CardProcessingService";
import { ChargeAttemptService as ChargeAttemptServiceApiImport } from "./src/api/ChargeAttemptService";
import { ChargeFlowLevelPaymentLinkService as ChargeFlowLevelPaymentLinkServiceApiImport } from "./src/api/ChargeFlowLevelPaymentLinkService";
import { ChargeFlowLevelService as ChargeFlowLevelServiceApiImport } from "./src/api/ChargeFlowLevelService";
import { ChargeFlowService as ChargeFlowServiceApiImport } from "./src/api/ChargeFlowService";
import { ConditionTypeService as ConditionTypeServiceApiImport } from "./src/api/ConditionTypeService";
import { CountryService as CountryServiceApiImport } from "./src/api/CountryService";
import { CountryStateService as CountryStateServiceApiImport } from "./src/api/CountryStateService";
import { CurrencyService as CurrencyServiceApiImport } from "./src/api/CurrencyService";
import { CustomerAddressService as CustomerAddressServiceApiImport } from "./src/api/CustomerAddressService";
import { CustomerCommentService as CustomerCommentServiceApiImport } from "./src/api/CustomerCommentService";
import { CustomerService as CustomerServiceApiImport } from "./src/api/CustomerService";
import { DeliveryIndicationService as DeliveryIndicationServiceApiImport } from "./src/api/DeliveryIndicationService";
import { DocumentTemplateService as DocumentTemplateServiceApiImport } from "./src/api/DocumentTemplateService";
import { DocumentTemplateTypeService as DocumentTemplateTypeServiceApiImport } from "./src/api/DocumentTemplateTypeService";
import { HumanUserService as HumanUserServiceApiImport } from "./src/api/HumanUserService";
import { LabelDescriptionGroupService as LabelDescriptionGroupServiceApiImport } from "./src/api/LabelDescriptionGroupService";
import { LabelDescriptionService as LabelDescriptionServiceApiImport } from "./src/api/LabelDescriptionService";
import { LanguageService as LanguageServiceApiImport } from "./src/api/LanguageService";
import { LegalOrganizationFormService as LegalOrganizationFormServiceApiImport } from "./src/api/LegalOrganizationFormService";
import { ManualTaskService as ManualTaskServiceApiImport } from "./src/api/ManualTaskService";
import { PaymentConnectorConfigurationService as PaymentConnectorConfigurationServiceApiImport } from "./src/api/PaymentConnectorConfigurationService";
import { PaymentConnectorService as PaymentConnectorServiceApiImport } from "./src/api/PaymentConnectorService";
import { PaymentLinkService as PaymentLinkServiceApiImport } from "./src/api/PaymentLinkService";
import { PaymentMethodBrandService as PaymentMethodBrandServiceApiImport } from "./src/api/PaymentMethodBrandService";
import { PaymentMethodConfigurationService as PaymentMethodConfigurationServiceApiImport } from "./src/api/PaymentMethodConfigurationService";
import { PaymentMethodService as PaymentMethodServiceApiImport } from "./src/api/PaymentMethodService";
import { PaymentProcessorConfigurationService as PaymentProcessorConfigurationServiceApiImport } from "./src/api/PaymentProcessorConfigurationService";
import { PaymentProcessorService as PaymentProcessorServiceApiImport } from "./src/api/PaymentProcessorService";
import { PaymentTerminalService as PaymentTerminalServiceApiImport } from "./src/api/PaymentTerminalService";
import { PaymentTerminalTillService as PaymentTerminalTillServiceApiImport } from "./src/api/PaymentTerminalTillService";
import { PermissionService as PermissionServiceApiImport } from "./src/api/PermissionService";
import { RefundCommentService as RefundCommentServiceApiImport } from "./src/api/RefundCommentService";
import { RefundService as RefundServiceApiImport } from "./src/api/RefundService";
import { ShopifyTransactionService as ShopifyTransactionServiceApiImport } from "./src/api/ShopifyTransactionService";
import { SpaceService as SpaceServiceApiImport } from "./src/api/SpaceService";
import { StaticValueService as StaticValueServiceApiImport } from "./src/api/StaticValueService";
import { TokenService as TokenServiceApiImport } from "./src/api/TokenService";
import { TokenVersionService as TokenVersionServiceApiImport } from "./src/api/TokenVersionService";
import { TransactionCommentService as TransactionCommentServiceApiImport } from "./src/api/TransactionCommentService";
import { TransactionCompletionService as TransactionCompletionServiceApiImport } from "./src/api/TransactionCompletionService";
import { TransactionIframeService as TransactionIframeServiceApiImport } from "./src/api/TransactionIframeService";
import { TransactionInvoiceCommentService as TransactionInvoiceCommentServiceApiImport } from "./src/api/TransactionInvoiceCommentService";
import { TransactionInvoiceService as TransactionInvoiceServiceApiImport } from "./src/api/TransactionInvoiceService";
import { TransactionLightboxService as TransactionLightboxServiceApiImport } from "./src/api/TransactionLightboxService";
import { TransactionMobileSdkService as TransactionMobileSdkServiceApiImport } from "./src/api/TransactionMobileSdkService";
import { TransactionPaymentPageService as TransactionPaymentPageServiceApiImport } from "./src/api/TransactionPaymentPageService";
import { TransactionService as TransactionServiceApiImport } from "./src/api/TransactionService";
import { TransactionTerminalService as TransactionTerminalServiceApiImport } from "./src/api/TransactionTerminalService";
import { TransactionVoidService as TransactionVoidServiceApiImport } from "./src/api/TransactionVoidService";
import { UserAccountRoleService as UserAccountRoleServiceApiImport } from "./src/api/UserAccountRoleService";
import { UserSpaceRoleService as UserSpaceRoleServiceApiImport } from "./src/api/UserSpaceRoleService";
import { WebhookListenerService as WebhookListenerServiceApiImport } from "./src/api/WebhookListenerService";
import { WebhookUrlService as WebhookUrlServiceApiImport } from "./src/api/WebhookUrlService";


export namespace TrustPayments {
    export namespace model {
        export type AbstractAccountUpdate = AbstractAccountUpdateModelImport;
        export const AbstractAccountUpdate = AbstractAccountUpdateModelImport;
        export type AbstractApplicationUserUpdate = AbstractApplicationUserUpdateModelImport;
        export const AbstractApplicationUserUpdate = AbstractApplicationUserUpdateModelImport;
        export type AbstractCustomerActive = AbstractCustomerActiveModelImport;
        export const AbstractCustomerActive = AbstractCustomerActiveModelImport;
        export type AbstractCustomerAddressActive = AbstractCustomerAddressActiveModelImport;
        export const AbstractCustomerAddressActive = AbstractCustomerAddressActiveModelImport;
        export type AbstractCustomerCommentActive = AbstractCustomerCommentActiveModelImport;
        export const AbstractCustomerCommentActive = AbstractCustomerCommentActiveModelImport;
        export type AbstractHumanUserUpdate = AbstractHumanUserUpdateModelImport;
        export const AbstractHumanUserUpdate = AbstractHumanUserUpdateModelImport;
        export type AbstractPaymentLinkUpdate = AbstractPaymentLinkUpdateModelImport;
        export const AbstractPaymentLinkUpdate = AbstractPaymentLinkUpdateModelImport;
        export type AbstractRefundCommentActive = AbstractRefundCommentActiveModelImport;
        export const AbstractRefundCommentActive = AbstractRefundCommentActiveModelImport;
        export type AbstractSpaceUpdate = AbstractSpaceUpdateModelImport;
        export const AbstractSpaceUpdate = AbstractSpaceUpdateModelImport;
        export type AbstractTokenUpdate = AbstractTokenUpdateModelImport;
        export const AbstractTokenUpdate = AbstractTokenUpdateModelImport;
        export type AbstractTransactionCommentActive = AbstractTransactionCommentActiveModelImport;
        export const AbstractTransactionCommentActive = AbstractTransactionCommentActiveModelImport;
        export type AbstractTransactionInvoiceCommentActive = AbstractTransactionInvoiceCommentActiveModelImport;
        export const AbstractTransactionInvoiceCommentActive = AbstractTransactionInvoiceCommentActiveModelImport;
        export type AbstractTransactionPending = AbstractTransactionPendingModelImport;
        export const AbstractTransactionPending = AbstractTransactionPendingModelImport;
        export type AbstractWebhookListenerUpdate = AbstractWebhookListenerUpdateModelImport;
        export const AbstractWebhookListenerUpdate = AbstractWebhookListenerUpdateModelImport;
        export type AbstractWebhookUrlUpdate = AbstractWebhookUrlUpdateModelImport;
        export const AbstractWebhookUrlUpdate = AbstractWebhookUrlUpdateModelImport;
        export type Account = AccountModelImport;
        export const Account = AccountModelImport;
        export type AccountState = AccountStateModelImport;
        export const AccountState = AccountStateModelImport;
        export type AccountType = AccountTypeModelImport;
        export const AccountType = AccountTypeModelImport;
        export type Address = AddressModelImport;
        export const Address = AddressModelImport;
        export type AddressCreate = AddressCreateModelImport;
        export const AddressCreate = AddressCreateModelImport;
        export type ChargeAttemptEnvironment = ChargeAttemptEnvironmentModelImport;
        export const ChargeAttemptEnvironment = ChargeAttemptEnvironmentModelImport;
        export type ChargeAttemptState = ChargeAttemptStateModelImport;
        export const ChargeAttemptState = ChargeAttemptStateModelImport;
        export type ChargeFlow = ChargeFlowModelImport;
        export const ChargeFlow = ChargeFlowModelImport;
        export type ChargeFlowLevelConfiguration = ChargeFlowLevelConfigurationModelImport;
        export const ChargeFlowLevelConfiguration = ChargeFlowLevelConfigurationModelImport;
        export type ChargeFlowLevelConfigurationType = ChargeFlowLevelConfigurationTypeModelImport;
        export const ChargeFlowLevelConfigurationType = ChargeFlowLevelConfigurationTypeModelImport;
        export type ChargeFlowLevelState = ChargeFlowLevelStateModelImport;
        export const ChargeFlowLevelState = ChargeFlowLevelStateModelImport;
        export type ChargeState = ChargeStateModelImport;
        export const ChargeState = ChargeStateModelImport;
        export type ChargeType = ChargeTypeModelImport;
        export const ChargeType = ChargeTypeModelImport;
        export type ClientError = ClientErrorModelImport;
        export const ClientError = ClientErrorModelImport;
        export type ClientErrorType = ClientErrorTypeModelImport;
        export const ClientErrorType = ClientErrorTypeModelImport;
        export type CompletionLineItem = CompletionLineItemModelImport;
        export const CompletionLineItem = CompletionLineItemModelImport;
        export type CompletionLineItemCreate = CompletionLineItemCreateModelImport;
        export const CompletionLineItemCreate = CompletionLineItemCreateModelImport;
        export type Condition = ConditionModelImport;
        export const Condition = ConditionModelImport;
        export type ConditionType = ConditionTypeModelImport;
        export const ConditionType = ConditionTypeModelImport;
        export type ConnectorInvocationStage = ConnectorInvocationStageModelImport;
        export const ConnectorInvocationStage = ConnectorInvocationStageModelImport;
        export type CreationEntityState = CreationEntityStateModelImport;
        export const CreationEntityState = CreationEntityStateModelImport;
        export type CriteriaOperator = CriteriaOperatorModelImport;
        export const CriteriaOperator = CriteriaOperatorModelImport;
        export type Customer = CustomerModelImport;
        export const Customer = CustomerModelImport;
        export type CustomerAddress = CustomerAddressModelImport;
        export const CustomerAddress = CustomerAddressModelImport;
        export type CustomerAddressType = CustomerAddressTypeModelImport;
        export const CustomerAddressType = CustomerAddressTypeModelImport;
        export type CustomerComment = CustomerCommentModelImport;
        export const CustomerComment = CustomerCommentModelImport;
        export type CustomerPostalAddress = CustomerPostalAddressModelImport;
        export const CustomerPostalAddress = CustomerPostalAddressModelImport;
        export type CustomerPostalAddressCreate = CustomerPostalAddressCreateModelImport;
        export const CustomerPostalAddressCreate = CustomerPostalAddressCreateModelImport;
        export type CustomersPresence = CustomersPresenceModelImport;
        export const CustomersPresence = CustomersPresenceModelImport;
        export type DataCollectionType = DataCollectionTypeModelImport;
        export const DataCollectionType = DataCollectionTypeModelImport;
        export type DatabaseTranslatedString = DatabaseTranslatedStringModelImport;
        export const DatabaseTranslatedString = DatabaseTranslatedStringModelImport;
        export type DatabaseTranslatedStringItem = DatabaseTranslatedStringItemModelImport;
        export const DatabaseTranslatedStringItem = DatabaseTranslatedStringItemModelImport;
        export type DeliveryIndicationDecisionReason = DeliveryIndicationDecisionReasonModelImport;
        export const DeliveryIndicationDecisionReason = DeliveryIndicationDecisionReasonModelImport;
        export type DeliveryIndicationState = DeliveryIndicationStateModelImport;
        export const DeliveryIndicationState = DeliveryIndicationStateModelImport;
        export type DocumentTemplate = DocumentTemplateModelImport;
        export const DocumentTemplate = DocumentTemplateModelImport;
        export type DocumentTemplateType = DocumentTemplateTypeModelImport;
        export const DocumentTemplateType = DocumentTemplateTypeModelImport;
        export type DocumentTemplateTypeGroup = DocumentTemplateTypeGroupModelImport;
        export const DocumentTemplateTypeGroup = DocumentTemplateTypeGroupModelImport;
        export type EntityExportRequest = EntityExportRequestModelImport;
        export const EntityExportRequest = EntityExportRequestModelImport;
        export type EntityQuery = EntityQueryModelImport;
        export const EntityQuery = EntityQueryModelImport;
        export type EntityQueryFilter = EntityQueryFilterModelImport;
        export const EntityQueryFilter = EntityQueryFilterModelImport;
        export type EntityQueryFilterType = EntityQueryFilterTypeModelImport;
        export const EntityQueryFilterType = EntityQueryFilterTypeModelImport;
        export type EntityQueryOrderBy = EntityQueryOrderByModelImport;
        export const EntityQueryOrderBy = EntityQueryOrderByModelImport;
        export type EntityQueryOrderByType = EntityQueryOrderByTypeModelImport;
        export const EntityQueryOrderByType = EntityQueryOrderByTypeModelImport;
        export type Environment = EnvironmentModelImport;
        export const Environment = EnvironmentModelImport;
        export type FailureCategory = FailureCategoryModelImport;
        export const FailureCategory = FailureCategoryModelImport;
        export type FailureReason = FailureReasonModelImport;
        export const FailureReason = FailureReasonModelImport;
        export type Feature = FeatureModelImport;
        export const Feature = FeatureModelImport;
        export type FeatureCategory = FeatureCategoryModelImport;
        export const FeatureCategory = FeatureCategoryModelImport;
        export type Gender = GenderModelImport;
        export const Gender = GenderModelImport;
        export type HumanUser = HumanUserModelImport;
        export const HumanUser = HumanUserModelImport;
        export type Label = LabelModelImport;
        export const Label = LabelModelImport;
        export type LabelDescriptor = LabelDescriptorModelImport;
        export const LabelDescriptor = LabelDescriptorModelImport;
        export type LabelDescriptorCategory = LabelDescriptorCategoryModelImport;
        export const LabelDescriptorCategory = LabelDescriptorCategoryModelImport;
        export type LabelDescriptorGroup = LabelDescriptorGroupModelImport;
        export const LabelDescriptorGroup = LabelDescriptorGroupModelImport;
        export type LabelDescriptorType = LabelDescriptorTypeModelImport;
        export const LabelDescriptorType = LabelDescriptorTypeModelImport;
        export type LegalOrganizationForm = LegalOrganizationFormModelImport;
        export const LegalOrganizationForm = LegalOrganizationFormModelImport;
        export type LineItem = LineItemModelImport;
        export const LineItem = LineItemModelImport;
        export type LineItemAttribute = LineItemAttributeModelImport;
        export const LineItemAttribute = LineItemAttributeModelImport;
        export type LineItemAttributeCreate = LineItemAttributeCreateModelImport;
        export const LineItemAttributeCreate = LineItemAttributeCreateModelImport;
        export type LineItemCreate = LineItemCreateModelImport;
        export const LineItemCreate = LineItemCreateModelImport;
        export type LineItemReduction = LineItemReductionModelImport;
        export const LineItemReduction = LineItemReductionModelImport;
        export type LineItemReductionCreate = LineItemReductionCreateModelImport;
        export const LineItemReductionCreate = LineItemReductionCreateModelImport;
        export type LineItemType = LineItemTypeModelImport;
        export const LineItemType = LineItemTypeModelImport;
        export type LocalizedString = LocalizedStringModelImport;
        export const LocalizedString = LocalizedStringModelImport;
        export type ManualTask = ManualTaskModelImport;
        export const ManualTask = ManualTaskModelImport;
        export type ManualTaskAction = ManualTaskActionModelImport;
        export const ManualTaskAction = ManualTaskActionModelImport;
        export type ManualTaskActionStyle = ManualTaskActionStyleModelImport;
        export const ManualTaskActionStyle = ManualTaskActionStyleModelImport;
        export type ManualTaskState = ManualTaskStateModelImport;
        export const ManualTaskState = ManualTaskStateModelImport;
        export type ManualTaskType = ManualTaskTypeModelImport;
        export const ManualTaskType = ManualTaskTypeModelImport;
        export type OneClickPaymentMode = OneClickPaymentModeModelImport;
        export const OneClickPaymentMode = OneClickPaymentModeModelImport;
        export type PaymentConnector = PaymentConnectorModelImport;
        export const PaymentConnector = PaymentConnectorModelImport;
        export type PaymentConnectorConfiguration = PaymentConnectorConfigurationModelImport;
        export const PaymentConnectorConfiguration = PaymentConnectorConfigurationModelImport;
        export type PaymentConnectorFeature = PaymentConnectorFeatureModelImport;
        export const PaymentConnectorFeature = PaymentConnectorFeatureModelImport;
        export type PaymentContract = PaymentContractModelImport;
        export const PaymentContract = PaymentContractModelImport;
        export type PaymentContractState = PaymentContractStateModelImport;
        export const PaymentContractState = PaymentContractStateModelImport;
        export type PaymentContractType = PaymentContractTypeModelImport;
        export const PaymentContractType = PaymentContractTypeModelImport;
        export type PaymentInformationHash = PaymentInformationHashModelImport;
        export const PaymentInformationHash = PaymentInformationHashModelImport;
        export type PaymentInformationHashType = PaymentInformationHashTypeModelImport;
        export const PaymentInformationHashType = PaymentInformationHashTypeModelImport;
        export type PaymentLink = PaymentLinkModelImport;
        export const PaymentLink = PaymentLinkModelImport;
        export type PaymentLinkProtectionMode = PaymentLinkProtectionModeModelImport;
        export const PaymentLinkProtectionMode = PaymentLinkProtectionModeModelImport;
        export type PaymentLinkUpdate = PaymentLinkUpdateModelImport;
        export const PaymentLinkUpdate = PaymentLinkUpdateModelImport;
        export type PaymentMethod = PaymentMethodModelImport;
        export const PaymentMethod = PaymentMethodModelImport;
        export type PaymentMethodBrand = PaymentMethodBrandModelImport;
        export const PaymentMethodBrand = PaymentMethodBrandModelImport;
        export type PaymentMethodConfiguration = PaymentMethodConfigurationModelImport;
        export const PaymentMethodConfiguration = PaymentMethodConfigurationModelImport;
        export type PaymentPrimaryRiskTaker = PaymentPrimaryRiskTakerModelImport;
        export const PaymentPrimaryRiskTaker = PaymentPrimaryRiskTakerModelImport;
        export type PaymentProcessor = PaymentProcessorModelImport;
        export const PaymentProcessor = PaymentProcessorModelImport;
        export type PaymentProcessorConfiguration = PaymentProcessorConfigurationModelImport;
        export const PaymentProcessorConfiguration = PaymentProcessorConfigurationModelImport;
        export type PaymentTerminal = PaymentTerminalModelImport;
        export const PaymentTerminal = PaymentTerminalModelImport;
        export type PaymentTerminalAddress = PaymentTerminalAddressModelImport;
        export const PaymentTerminalAddress = PaymentTerminalAddressModelImport;
        export type PaymentTerminalConfiguration = PaymentTerminalConfigurationModelImport;
        export const PaymentTerminalConfiguration = PaymentTerminalConfigurationModelImport;
        export type PaymentTerminalConfigurationState = PaymentTerminalConfigurationStateModelImport;
        export const PaymentTerminalConfigurationState = PaymentTerminalConfigurationStateModelImport;
        export type PaymentTerminalConfigurationVersion = PaymentTerminalConfigurationVersionModelImport;
        export const PaymentTerminalConfigurationVersion = PaymentTerminalConfigurationVersionModelImport;
        export type PaymentTerminalConfigurationVersionState = PaymentTerminalConfigurationVersionStateModelImport;
        export const PaymentTerminalConfigurationVersionState = PaymentTerminalConfigurationVersionStateModelImport;
        export type PaymentTerminalLocation = PaymentTerminalLocationModelImport;
        export const PaymentTerminalLocation = PaymentTerminalLocationModelImport;
        export type PaymentTerminalLocationState = PaymentTerminalLocationStateModelImport;
        export const PaymentTerminalLocationState = PaymentTerminalLocationStateModelImport;
        export type PaymentTerminalLocationVersion = PaymentTerminalLocationVersionModelImport;
        export const PaymentTerminalLocationVersion = PaymentTerminalLocationVersionModelImport;
        export type PaymentTerminalLocationVersionState = PaymentTerminalLocationVersionStateModelImport;
        export const PaymentTerminalLocationVersionState = PaymentTerminalLocationVersionStateModelImport;
        export type PaymentTerminalState = PaymentTerminalStateModelImport;
        export const PaymentTerminalState = PaymentTerminalStateModelImport;
        export type PaymentTerminalType = PaymentTerminalTypeModelImport;
        export const PaymentTerminalType = PaymentTerminalTypeModelImport;
        export type Permission = PermissionModelImport;
        export const Permission = PermissionModelImport;
        export type Refund = RefundModelImport;
        export const Refund = RefundModelImport;
        export type RefundComment = RefundCommentModelImport;
        export const RefundComment = RefundCommentModelImport;
        export type RefundCreate = RefundCreateModelImport;
        export const RefundCreate = RefundCreateModelImport;
        export type RefundState = RefundStateModelImport;
        export const RefundState = RefundStateModelImport;
        export type RefundType = RefundTypeModelImport;
        export const RefundType = RefundTypeModelImport;
        export type RenderedDocument = RenderedDocumentModelImport;
        export const RenderedDocument = RenderedDocumentModelImport;
        export type RenderedTerminalReceipt = RenderedTerminalReceiptModelImport;
        export const RenderedTerminalReceipt = RenderedTerminalReceiptModelImport;
        export type ResourcePath = ResourcePathModelImport;
        export const ResourcePath = ResourcePathModelImport;
        export type ResourceState = ResourceStateModelImport;
        export const ResourceState = ResourceStateModelImport;
        export type RestAddressFormat = RestAddressFormatModelImport;
        export const RestAddressFormat = RestAddressFormatModelImport;
        export type RestAddressFormatField = RestAddressFormatFieldModelImport;
        export const RestAddressFormatField = RestAddressFormatFieldModelImport;
        export type RestCountry = RestCountryModelImport;
        export const RestCountry = RestCountryModelImport;
        export type RestCountryState = RestCountryStateModelImport;
        export const RestCountryState = RestCountryStateModelImport;
        export type RestCurrency = RestCurrencyModelImport;
        export const RestCurrency = RestCurrencyModelImport;
        export type RestLanguage = RestLanguageModelImport;
        export const RestLanguage = RestLanguageModelImport;
        export type Role = RoleModelImport;
        export const Role = RoleModelImport;
        export type SalesChannel = SalesChannelModelImport;
        export const SalesChannel = SalesChannelModelImport;
        export type Scope = ScopeModelImport;
        export const Scope = ScopeModelImport;
        export type ServerError = ServerErrorModelImport;
        export const ServerError = ServerErrorModelImport;
        export type ShopifyAdditionalLineItemData = ShopifyAdditionalLineItemDataModelImport;
        export const ShopifyAdditionalLineItemData = ShopifyAdditionalLineItemDataModelImport;
        export type ShopifyIntegration = ShopifyIntegrationModelImport;
        export const ShopifyIntegration = ShopifyIntegrationModelImport;
        export type ShopifyIntegrationPaymentAppVersion = ShopifyIntegrationPaymentAppVersionModelImport;
        export const ShopifyIntegrationPaymentAppVersion = ShopifyIntegrationPaymentAppVersionModelImport;
        export type ShopifyIntegrationSubscriptionAppVersion = ShopifyIntegrationSubscriptionAppVersionModelImport;
        export const ShopifyIntegrationSubscriptionAppVersion = ShopifyIntegrationSubscriptionAppVersionModelImport;
        export type ShopifyTransactionState = ShopifyTransactionStateModelImport;
        export const ShopifyTransactionState = ShopifyTransactionStateModelImport;
        export type Space = SpaceModelImport;
        export const Space = SpaceModelImport;
        export type SpaceAddress = SpaceAddressModelImport;
        export const SpaceAddress = SpaceAddressModelImport;
        export type SpaceAddressCreate = SpaceAddressCreateModelImport;
        export const SpaceAddressCreate = SpaceAddressCreateModelImport;
        export type SpaceView = SpaceViewModelImport;
        export const SpaceView = SpaceViewModelImport;
        export type StaticValue = StaticValueModelImport;
        export const StaticValue = StaticValueModelImport;
        export type Tax = TaxModelImport;
        export const Tax = TaxModelImport;
        export type TaxCreate = TaxCreateModelImport;
        export const TaxCreate = TaxCreateModelImport;
        export type TenantDatabase = TenantDatabaseModelImport;
        export const TenantDatabase = TenantDatabaseModelImport;
        export type Token = TokenModelImport;
        export const Token = TokenModelImport;
        export type TokenVersion = TokenVersionModelImport;
        export const TokenVersion = TokenVersionModelImport;
        export type TokenVersionState = TokenVersionStateModelImport;
        export const TokenVersionState = TokenVersionStateModelImport;
        export type TokenVersionType = TokenVersionTypeModelImport;
        export const TokenVersionType = TokenVersionTypeModelImport;
        export type TokenizationMode = TokenizationModeModelImport;
        export const TokenizationMode = TokenizationModeModelImport;
        export type Transaction = TransactionModelImport;
        export const Transaction = TransactionModelImport;
        export type TransactionAwareEntity = TransactionAwareEntityModelImport;
        export const TransactionAwareEntity = TransactionAwareEntityModelImport;
        export type TransactionComment = TransactionCommentModelImport;
        export const TransactionComment = TransactionCommentModelImport;
        export type TransactionCompletionBehavior = TransactionCompletionBehaviorModelImport;
        export const TransactionCompletionBehavior = TransactionCompletionBehaviorModelImport;
        export type TransactionCompletionMode = TransactionCompletionModeModelImport;
        export const TransactionCompletionMode = TransactionCompletionModeModelImport;
        export type TransactionCompletionRequest = TransactionCompletionRequestModelImport;
        export const TransactionCompletionRequest = TransactionCompletionRequestModelImport;
        export type TransactionCompletionState = TransactionCompletionStateModelImport;
        export const TransactionCompletionState = TransactionCompletionStateModelImport;
        export type TransactionEnvironmentSelectionStrategy = TransactionEnvironmentSelectionStrategyModelImport;
        export const TransactionEnvironmentSelectionStrategy = TransactionEnvironmentSelectionStrategyModelImport;
        export type TransactionGroup = TransactionGroupModelImport;
        export const TransactionGroup = TransactionGroupModelImport;
        export type TransactionGroupState = TransactionGroupStateModelImport;
        export const TransactionGroupState = TransactionGroupStateModelImport;
        export type TransactionInvoiceComment = TransactionInvoiceCommentModelImport;
        export const TransactionInvoiceComment = TransactionInvoiceCommentModelImport;
        export type TransactionInvoiceReplacement = TransactionInvoiceReplacementModelImport;
        export const TransactionInvoiceReplacement = TransactionInvoiceReplacementModelImport;
        export type TransactionInvoiceState = TransactionInvoiceStateModelImport;
        export const TransactionInvoiceState = TransactionInvoiceStateModelImport;
        export type TransactionLineItemUpdateRequest = TransactionLineItemUpdateRequestModelImport;
        export const TransactionLineItemUpdateRequest = TransactionLineItemUpdateRequestModelImport;
        export type TransactionState = TransactionStateModelImport;
        export const TransactionState = TransactionStateModelImport;
        export type TransactionUserInterfaceType = TransactionUserInterfaceTypeModelImport;
        export const TransactionUserInterfaceType = TransactionUserInterfaceTypeModelImport;
        export type TransactionVoidMode = TransactionVoidModeModelImport;
        export const TransactionVoidMode = TransactionVoidModeModelImport;
        export type TransactionVoidState = TransactionVoidStateModelImport;
        export const TransactionVoidState = TransactionVoidStateModelImport;
        export type TwoFactorAuthenticationType = TwoFactorAuthenticationTypeModelImport;
        export const TwoFactorAuthenticationType = TwoFactorAuthenticationTypeModelImport;
        export type UnencryptedCardData = UnencryptedCardDataModelImport;
        export const UnencryptedCardData = UnencryptedCardDataModelImport;
        export type UnencryptedCardDataCreate = UnencryptedCardDataCreateModelImport;
        export const UnencryptedCardDataCreate = UnencryptedCardDataCreateModelImport;
        export type User = UserModelImport;
        export const User = UserModelImport;
        export type UserAccountRole = UserAccountRoleModelImport;
        export const UserAccountRole = UserAccountRoleModelImport;
        export type UserSpaceRole = UserSpaceRoleModelImport;
        export const UserSpaceRole = UserSpaceRoleModelImport;
        export type UserType = UserTypeModelImport;
        export const UserType = UserTypeModelImport;
        export type WebhookIdentity = WebhookIdentityModelImport;
        export const WebhookIdentity = WebhookIdentityModelImport;
        export type WebhookListener = WebhookListenerModelImport;
        export const WebhookListener = WebhookListenerModelImport;
        export type WebhookListenerEntity = WebhookListenerEntityModelImport;
        export const WebhookListenerEntity = WebhookListenerEntityModelImport;
        export type WebhookUrl = WebhookUrlModelImport;
        export const WebhookUrl = WebhookUrlModelImport;
        export type AccountCreate = AccountCreateModelImport;
        export const AccountCreate = AccountCreateModelImport;
        export type AccountUpdate = AccountUpdateModelImport;
        export const AccountUpdate = AccountUpdateModelImport;
        export type ApplicationUser = ApplicationUserModelImport;
        export const ApplicationUser = ApplicationUserModelImport;
        export type ApplicationUserCreate = ApplicationUserCreateModelImport;
        export const ApplicationUserCreate = ApplicationUserCreateModelImport;
        export type ApplicationUserUpdate = ApplicationUserUpdateModelImport;
        export const ApplicationUserUpdate = ApplicationUserUpdateModelImport;
        export type Charge = ChargeModelImport;
        export const Charge = ChargeModelImport;
        export type ChargeAttempt = ChargeAttemptModelImport;
        export const ChargeAttempt = ChargeAttemptModelImport;
        export type ChargeFlowLevel = ChargeFlowLevelModelImport;
        export const ChargeFlowLevel = ChargeFlowLevelModelImport;
        export type ChargeFlowLevelPaymentLink = ChargeFlowLevelPaymentLinkModelImport;
        export const ChargeFlowLevelPaymentLink = ChargeFlowLevelPaymentLinkModelImport;
        export type ConnectorInvocation = ConnectorInvocationModelImport;
        export const ConnectorInvocation = ConnectorInvocationModelImport;
        export type CustomerActive = CustomerActiveModelImport;
        export const CustomerActive = CustomerActiveModelImport;
        export type CustomerAddressActive = CustomerAddressActiveModelImport;
        export const CustomerAddressActive = CustomerAddressActiveModelImport;
        export type CustomerAddressCreate = CustomerAddressCreateModelImport;
        export const CustomerAddressCreate = CustomerAddressCreateModelImport;
        export type CustomerCommentActive = CustomerCommentActiveModelImport;
        export const CustomerCommentActive = CustomerCommentActiveModelImport;
        export type CustomerCommentCreate = CustomerCommentCreateModelImport;
        export const CustomerCommentCreate = CustomerCommentCreateModelImport;
        export type CustomerCreate = CustomerCreateModelImport;
        export const CustomerCreate = CustomerCreateModelImport;
        export type DeliveryIndication = DeliveryIndicationModelImport;
        export const DeliveryIndication = DeliveryIndicationModelImport;
        export type HumanUserCreate = HumanUserCreateModelImport;
        export const HumanUserCreate = HumanUserCreateModelImport;
        export type HumanUserUpdate = HumanUserUpdateModelImport;
        export const HumanUserUpdate = HumanUserUpdateModelImport;
        export type PaymentLinkActive = PaymentLinkActiveModelImport;
        export const PaymentLinkActive = PaymentLinkActiveModelImport;
        export type PaymentLinkCreate = PaymentLinkCreateModelImport;
        export const PaymentLinkCreate = PaymentLinkCreateModelImport;
        export type PaymentTerminalContactAddress = PaymentTerminalContactAddressModelImport;
        export const PaymentTerminalContactAddress = PaymentTerminalContactAddressModelImport;
        export type RefundCommentActive = RefundCommentActiveModelImport;
        export const RefundCommentActive = RefundCommentActiveModelImport;
        export type RefundCommentCreate = RefundCommentCreateModelImport;
        export const RefundCommentCreate = RefundCommentCreateModelImport;
        export type ShopifyTransaction = ShopifyTransactionModelImport;
        export const ShopifyTransaction = ShopifyTransactionModelImport;
        export type SpaceCreate = SpaceCreateModelImport;
        export const SpaceCreate = SpaceCreateModelImport;
        export type SpaceUpdate = SpaceUpdateModelImport;
        export const SpaceUpdate = SpaceUpdateModelImport;
        export type TokenCreate = TokenCreateModelImport;
        export const TokenCreate = TokenCreateModelImport;
        export type TokenUpdate = TokenUpdateModelImport;
        export const TokenUpdate = TokenUpdateModelImport;
        export type TransactionCommentActive = TransactionCommentActiveModelImport;
        export const TransactionCommentActive = TransactionCommentActiveModelImport;
        export type TransactionCommentCreate = TransactionCommentCreateModelImport;
        export const TransactionCommentCreate = TransactionCommentCreateModelImport;
        export type TransactionCompletion = TransactionCompletionModelImport;
        export const TransactionCompletion = TransactionCompletionModelImport;
        export type TransactionCreate = TransactionCreateModelImport;
        export const TransactionCreate = TransactionCreateModelImport;
        export type TransactionInvoice = TransactionInvoiceModelImport;
        export const TransactionInvoice = TransactionInvoiceModelImport;
        export type TransactionInvoiceCommentActive = TransactionInvoiceCommentActiveModelImport;
        export const TransactionInvoiceCommentActive = TransactionInvoiceCommentActiveModelImport;
        export type TransactionInvoiceCommentCreate = TransactionInvoiceCommentCreateModelImport;
        export const TransactionInvoiceCommentCreate = TransactionInvoiceCommentCreateModelImport;
        export type TransactionLineItemVersion = TransactionLineItemVersionModelImport;
        export const TransactionLineItemVersion = TransactionLineItemVersionModelImport;
        export type TransactionPending = TransactionPendingModelImport;
        export const TransactionPending = TransactionPendingModelImport;
        export type TransactionVoid = TransactionVoidModelImport;
        export const TransactionVoid = TransactionVoidModelImport;
        export type WebhookListenerCreate = WebhookListenerCreateModelImport;
        export const WebhookListenerCreate = WebhookListenerCreateModelImport;
        export type WebhookListenerUpdate = WebhookListenerUpdateModelImport;
        export const WebhookListenerUpdate = WebhookListenerUpdateModelImport;
        export type WebhookUrlCreate = WebhookUrlCreateModelImport;
        export const WebhookUrlCreate = WebhookUrlCreateModelImport;
        export type WebhookUrlUpdate = WebhookUrlUpdateModelImport;
        export const WebhookUrlUpdate = WebhookUrlUpdateModelImport;
        export type ApplicationUserCreateWithMacKey = ApplicationUserCreateWithMacKeyModelImport;
        export const ApplicationUserCreateWithMacKey = ApplicationUserCreateWithMacKeyModelImport;
        
    }
    export namespace api {
        export type AccountService = AccountServiceApiImport;
        export const AccountService = AccountServiceApiImport;
        export type ApplicationUserService = ApplicationUserServiceApiImport;
        export const ApplicationUserService = ApplicationUserServiceApiImport;
        export type CardProcessingService = CardProcessingServiceApiImport;
        export const CardProcessingService = CardProcessingServiceApiImport;
        export type ChargeAttemptService = ChargeAttemptServiceApiImport;
        export const ChargeAttemptService = ChargeAttemptServiceApiImport;
        export type ChargeFlowLevelPaymentLinkService = ChargeFlowLevelPaymentLinkServiceApiImport;
        export const ChargeFlowLevelPaymentLinkService = ChargeFlowLevelPaymentLinkServiceApiImport;
        export type ChargeFlowLevelService = ChargeFlowLevelServiceApiImport;
        export const ChargeFlowLevelService = ChargeFlowLevelServiceApiImport;
        export type ChargeFlowService = ChargeFlowServiceApiImport;
        export const ChargeFlowService = ChargeFlowServiceApiImport;
        export type ConditionTypeService = ConditionTypeServiceApiImport;
        export const ConditionTypeService = ConditionTypeServiceApiImport;
        export type CountryService = CountryServiceApiImport;
        export const CountryService = CountryServiceApiImport;
        export type CountryStateService = CountryStateServiceApiImport;
        export const CountryStateService = CountryStateServiceApiImport;
        export type CurrencyService = CurrencyServiceApiImport;
        export const CurrencyService = CurrencyServiceApiImport;
        export type CustomerAddressService = CustomerAddressServiceApiImport;
        export const CustomerAddressService = CustomerAddressServiceApiImport;
        export type CustomerCommentService = CustomerCommentServiceApiImport;
        export const CustomerCommentService = CustomerCommentServiceApiImport;
        export type CustomerService = CustomerServiceApiImport;
        export const CustomerService = CustomerServiceApiImport;
        export type DeliveryIndicationService = DeliveryIndicationServiceApiImport;
        export const DeliveryIndicationService = DeliveryIndicationServiceApiImport;
        export type DocumentTemplateService = DocumentTemplateServiceApiImport;
        export const DocumentTemplateService = DocumentTemplateServiceApiImport;
        export type DocumentTemplateTypeService = DocumentTemplateTypeServiceApiImport;
        export const DocumentTemplateTypeService = DocumentTemplateTypeServiceApiImport;
        export type HumanUserService = HumanUserServiceApiImport;
        export const HumanUserService = HumanUserServiceApiImport;
        export type LabelDescriptionGroupService = LabelDescriptionGroupServiceApiImport;
        export const LabelDescriptionGroupService = LabelDescriptionGroupServiceApiImport;
        export type LabelDescriptionService = LabelDescriptionServiceApiImport;
        export const LabelDescriptionService = LabelDescriptionServiceApiImport;
        export type LanguageService = LanguageServiceApiImport;
        export const LanguageService = LanguageServiceApiImport;
        export type LegalOrganizationFormService = LegalOrganizationFormServiceApiImport;
        export const LegalOrganizationFormService = LegalOrganizationFormServiceApiImport;
        export type ManualTaskService = ManualTaskServiceApiImport;
        export const ManualTaskService = ManualTaskServiceApiImport;
        export type PaymentConnectorConfigurationService = PaymentConnectorConfigurationServiceApiImport;
        export const PaymentConnectorConfigurationService = PaymentConnectorConfigurationServiceApiImport;
        export type PaymentConnectorService = PaymentConnectorServiceApiImport;
        export const PaymentConnectorService = PaymentConnectorServiceApiImport;
        export type PaymentLinkService = PaymentLinkServiceApiImport;
        export const PaymentLinkService = PaymentLinkServiceApiImport;
        export type PaymentMethodBrandService = PaymentMethodBrandServiceApiImport;
        export const PaymentMethodBrandService = PaymentMethodBrandServiceApiImport;
        export type PaymentMethodConfigurationService = PaymentMethodConfigurationServiceApiImport;
        export const PaymentMethodConfigurationService = PaymentMethodConfigurationServiceApiImport;
        export type PaymentMethodService = PaymentMethodServiceApiImport;
        export const PaymentMethodService = PaymentMethodServiceApiImport;
        export type PaymentProcessorConfigurationService = PaymentProcessorConfigurationServiceApiImport;
        export const PaymentProcessorConfigurationService = PaymentProcessorConfigurationServiceApiImport;
        export type PaymentProcessorService = PaymentProcessorServiceApiImport;
        export const PaymentProcessorService = PaymentProcessorServiceApiImport;
        export type PaymentTerminalService = PaymentTerminalServiceApiImport;
        export const PaymentTerminalService = PaymentTerminalServiceApiImport;
        export type PaymentTerminalTillService = PaymentTerminalTillServiceApiImport;
        export const PaymentTerminalTillService = PaymentTerminalTillServiceApiImport;
        export type PermissionService = PermissionServiceApiImport;
        export const PermissionService = PermissionServiceApiImport;
        export type RefundCommentService = RefundCommentServiceApiImport;
        export const RefundCommentService = RefundCommentServiceApiImport;
        export type RefundService = RefundServiceApiImport;
        export const RefundService = RefundServiceApiImport;
        export type ShopifyTransactionService = ShopifyTransactionServiceApiImport;
        export const ShopifyTransactionService = ShopifyTransactionServiceApiImport;
        export type SpaceService = SpaceServiceApiImport;
        export const SpaceService = SpaceServiceApiImport;
        export type StaticValueService = StaticValueServiceApiImport;
        export const StaticValueService = StaticValueServiceApiImport;
        export type TokenService = TokenServiceApiImport;
        export const TokenService = TokenServiceApiImport;
        export type TokenVersionService = TokenVersionServiceApiImport;
        export const TokenVersionService = TokenVersionServiceApiImport;
        export type TransactionCommentService = TransactionCommentServiceApiImport;
        export const TransactionCommentService = TransactionCommentServiceApiImport;
        export type TransactionCompletionService = TransactionCompletionServiceApiImport;
        export const TransactionCompletionService = TransactionCompletionServiceApiImport;
        export type TransactionIframeService = TransactionIframeServiceApiImport;
        export const TransactionIframeService = TransactionIframeServiceApiImport;
        export type TransactionInvoiceCommentService = TransactionInvoiceCommentServiceApiImport;
        export const TransactionInvoiceCommentService = TransactionInvoiceCommentServiceApiImport;
        export type TransactionInvoiceService = TransactionInvoiceServiceApiImport;
        export const TransactionInvoiceService = TransactionInvoiceServiceApiImport;
        export type TransactionLightboxService = TransactionLightboxServiceApiImport;
        export const TransactionLightboxService = TransactionLightboxServiceApiImport;
        export type TransactionMobileSdkService = TransactionMobileSdkServiceApiImport;
        export const TransactionMobileSdkService = TransactionMobileSdkServiceApiImport;
        export type TransactionPaymentPageService = TransactionPaymentPageServiceApiImport;
        export const TransactionPaymentPageService = TransactionPaymentPageServiceApiImport;
        export type TransactionService = TransactionServiceApiImport;
        export const TransactionService = TransactionServiceApiImport;
        export type TransactionTerminalService = TransactionTerminalServiceApiImport;
        export const TransactionTerminalService = TransactionTerminalServiceApiImport;
        export type TransactionVoidService = TransactionVoidServiceApiImport;
        export const TransactionVoidService = TransactionVoidServiceApiImport;
        export type UserAccountRoleService = UserAccountRoleServiceApiImport;
        export const UserAccountRoleService = UserAccountRoleServiceApiImport;
        export type UserSpaceRoleService = UserSpaceRoleServiceApiImport;
        export const UserSpaceRoleService = UserSpaceRoleServiceApiImport;
        export type WebhookListenerService = WebhookListenerServiceApiImport;
        export const WebhookListenerService = WebhookListenerServiceApiImport;
        export type WebhookUrlService = WebhookUrlServiceApiImport;
        export const WebhookUrlService = WebhookUrlServiceApiImport;
        
    }
}